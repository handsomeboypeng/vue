{"remainingRequest":"/Users/pengsmart/Documents/code/frontEnd/vue/vue_test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/pengsmart/Documents/code/frontEnd/vue/vue_test/src/components/MyItem.vue?vue&type=style&index=0&id=4da6658f&scoped=true&lang=css&","dependencies":[{"path":"/Users/pengsmart/Documents/code/frontEnd/vue/vue_test/src/components/MyItem.vue","mtime":1658242120531},{"path":"/Users/pengsmart/Documents/code/frontEnd/vue/vue_test/node_modules/css-loader/dist/cjs.js","mtime":1655612206417},{"path":"/Users/pengsmart/Documents/code/frontEnd/vue/vue_test/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1655612261795},{"path":"/Users/pengsmart/Documents/code/frontEnd/vue/vue_test/node_modules/postcss-loader/src/index.js","mtime":1655612265268},{"path":"/Users/pengsmart/Documents/code/frontEnd/vue/vue_test/node_modules/cache-loader/dist/cjs.js","mtime":1655612206473},{"path":"/Users/pengsmart/Documents/code/frontEnd/vue/vue_test/node_modules/vue-loader/lib/index.js","mtime":1655612261790}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi8qaXRlbSovCmxpIHsKICBsaXN0LXN0eWxlOiBub25lOwogIGhlaWdodDogMzZweDsKICBsaW5lLWhlaWdodDogMzZweDsKICBwYWRkaW5nOiAwIDVweDsKICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2RkZDsKfQoKbGkgbGFiZWwgewogIGZsb2F0OiBsZWZ0OwogIGN1cnNvcjogcG9pbnRlcjsKfQoKbGkgbGFiZWwgbGkgaW5wdXQgewogIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7CiAgbWFyZ2luLXJpZ2h0OiA2cHg7CiAgcG9zaXRpb246IHJlbGF0aXZlOwogIHRvcDogLTFweDsKfQoKbGkgYnV0dG9uIHsKICBmbG9hdDogcmlnaHQ7CiAgZGlzcGxheTogbm9uZTsKICBtYXJnaW4tdG9wOiAzcHg7Cn0KCmxpOmJlZm9yZSB7CiAgY29udGVudDogaW5pdGlhbDsKfQoKbGk6bGFzdC1jaGlsZCB7CiAgYm9yZGVyLWJvdHRvbTogbm9uZTsKfQoKbGk6aG92ZXIgewogICAgYmFja2dyb3VuZC1jb2xvcjogc2t5Ymx1ZTsKfQoKbGk6aG92ZXIgYnV0dG9uIHsKICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsKfQoK"},{"version":3,"sources":["MyItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"MyItem.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <li>\n        <label>\n            <input type=\"checkbox\" :checked=\"todo.done\" @click=\"handleCheck(todo.id)\"/>\n            <!-- 如下代码也能实现功能，但是不太推荐，因为有点违反原则，因为修改了props -->\n\t\t\t<!-- <input type=\"checkbox\" v-model=\"todo.done\"/> -->\n            \t<span v-show=\"!todo.isEdit\">{{todo.title}}</span>\n              <input \n                type=\"text\" \n                v-show=\"todo.isEdit\" \n                :value=\"todo.title\" \n                @blur=\"handleBlur(todo,$event)\">\n        </label>\n        <button class=\"btn btn-danger\" @click=\"handleDelete(todo.id)\">删除</button>\n        <button class=\"btn btn-edit\" v-show=\"!todo.isEdit\" @click=\"handleEdit(todo)\"> 编辑 </button>\n    </li>\n</template>\n\n<script scoped>\nexport default {\n    name:'MyItem',\n    //声明接收todo对象\n    props:['todo'],\n    // 数据在哪里操作数据的方法就在哪里，todos在app中对todos的增删查改都应该在app中\n    methods: {\n        handleCheck(id) {\n            this.$bus.$emit('checkTodo',id)\n        },\n        handleDelete(id) {\n            if(confirm(\"确定删除吗？\")){\n                this.$bus.$emit('deleteTodo',id)\n            }\n        },\n        handleEdit(todo){\n          if(todo.hasOwnProperty('isEdit')) {\n            todo.isEdit = true\n          } else {\n          //这么给todo身上添加isEdit就是一个响应式的了,之前的属性是已经准备好了，并且是调用的数组的unshift这些方法,\n          //Vue 将被侦听的数组的变更方法进行了包裹，所以它们也将会触发视图更新。由于 JavaScript 的限制，Vue 不能检测数组和对象的变化。\n          this.$set(todo,'isEdit',true)\n          //这里不要用v-model，因为todo是prop里面的属性，vue不建议这样做\n          }\n        },\n        handleBlur(todo,e){\n          todo.isEdit = false\n          this.$bus.$emit('updateTodo',todo.id,e.target.value)\n        }\n    },\n}\n</script>\n\n<style scoped>\n/*item*/\nli {\n  list-style: none;\n  height: 36px;\n  line-height: 36px;\n  padding: 0 5px;\n  border-bottom: 1px solid #ddd;\n}\n\nli label {\n  float: left;\n  cursor: pointer;\n}\n\nli label li input {\n  vertical-align: middle;\n  margin-right: 6px;\n  position: relative;\n  top: -1px;\n}\n\nli button {\n  float: right;\n  display: none;\n  margin-top: 3px;\n}\n\nli:before {\n  content: initial;\n}\n\nli:last-child {\n  border-bottom: none;\n}\n\nli:hover {\n    background-color: skyblue;\n}\n\nli:hover button {\n    display: inline-block;\n}\n\n</style>"]}]}