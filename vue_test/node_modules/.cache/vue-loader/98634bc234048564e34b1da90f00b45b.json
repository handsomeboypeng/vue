{"remainingRequest":"/Users/pengsmart/Documents/code/frontEnd/vue/vue_test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/pengsmart/Documents/code/frontEnd/vue/vue_test/src/components/List.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/pengsmart/Documents/code/frontEnd/vue/vue_test/src/components/List.vue","mtime":1658561891747},{"path":"/Users/pengsmart/Documents/code/frontEnd/vue/vue_test/node_modules/cache-loader/dist/cjs.js","mtime":1655612206473},{"path":"/Users/pengsmart/Documents/code/frontEnd/vue/vue_test/node_modules/babel-loader/lib/index.js","mtime":1655612206640},{"path":"/Users/pengsmart/Documents/code/frontEnd/vue/vue_test/node_modules/cache-loader/dist/cjs.js","mtime":1655612206473},{"path":"/Users/pengsmart/Documents/code/frontEnd/vue/vue_test/node_modules/vue-loader/lib/index.js","mtime":1655612261790}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICdMaXN0JywKICAgIGRhdGEoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgLy/mlbDmja7pqbHliqjnnYDpobXpnaLlsZXnpLrvvIzlm6DkuLrpppbmrKHliqDovb3pobXpnaLlkozkvb/nlKjov4fnqIvkuK3mnInlpJrnp43nirbmgIHmiYDku6XlvpfmkJ7lpJrkuKrnirbmgIEKICAgICAgICAgICAgaW5mbzp7CiAgICAgICAgICAgICAgICAvL+WklumdouWll+WxgmluZm/kuLrnmoTmmK/mlbTkvZPmi7/liLAKICAgICAgICAgICAgICAgIGlzRmlyc3Q6dHJ1ZSwKICAgICAgICAgICAgICAgIGlzTG9hZGluZzpmYWxzZSwKICAgICAgICAgICAgICAgIGVyck1zZzonJywKICAgICAgICAgICAgICAgIHVzZXJzOltdCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9LAogICAgbW91bnRlZCgpIHsKICAgICAgICB0aGlzLiRidXMuJG9uKCd1cGRhdGVMaXN0RGF0YScsKGRhdGFPYmopPT57CiAgICAgICAgICAgIC8v5oqKZGF0YW9iauihpeWFqOWIsHRoaXMuaW5mbyzlj6/ku6XlkI7pnaLlnKjmi7/liLDmlbDmja7lkI7kuI3nlKjkvKBpc2ZpcnN0CiAgICAgICAgICAgIHRoaXMuaW5mbyA9IHsuLi50aGlzLmluZm8sLi4uZGF0YU9ian0KICAgICAgICB9KQogICAgfSwKfQo="},{"version":3,"sources":["List.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"List.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"row\">\n        <div v-show=\"info.users.length\" class=\"card\" v-for=\"user in info.users\" :key=\"user.login\">\n            <!-- :动态绑定才是表达式才能拿到值 -->\n            <a :href=\"user.html_url\" target=\"_blank\">\n            <img :src=\"user.avatar_url\" style='width: 100px'/>\n            </a>\n            <p class=\"card-text\">{{user.login}}</p>\n        </div>\n        <h1 v-show=\"info.isFirst\">welcome to use github Search Service</h1>\n        <h1 v-show=\"info.isLoading\">Loading...</h1>\n        <h1 v-show=\"info.errMsg\">{{info.errMsg}}</h1>\n    </div>\n\n</template>\n\n<script>\nexport default {\n    name: 'List',\n    data() {\n        return {\n            //数据驱动着页面展示，因为首次加载页面和使用过程中有多种状态所以得搞多个状态\n            info:{\n                //外面套层info为的是整体拿到\n                isFirst:true,\n                isLoading:false,\n                errMsg:'',\n                users:[]\n            }\n        }\n    },\n    mounted() {\n        this.$bus.$on('updateListData',(dataObj)=>{\n            //把dataobj补全到this.info,可以后面在拿到数据后不用传isfirst\n            this.info = {...this.info,...dataObj}\n        })\n    },\n}\n</script>\n\n<style>\n\n</style>"]}]}