{"remainingRequest":"/Users/pengsmart/Documents/code/frontEnd/vue/vue_test/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/pengsmart/Documents/code/frontEnd/vue/vue_test/src/components/MyHeader.vue?vue&type=style&index=0&id=898691ee&scoped=true&lang=css&","dependencies":[{"path":"/Users/pengsmart/Documents/code/frontEnd/vue/vue_test/src/components/MyHeader.vue","mtime":1658075750940},{"path":"/Users/pengsmart/Documents/code/frontEnd/vue/vue_test/node_modules/css-loader/dist/cjs.js","mtime":1655612206417},{"path":"/Users/pengsmart/Documents/code/frontEnd/vue/vue_test/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1655612261795},{"path":"/Users/pengsmart/Documents/code/frontEnd/vue/vue_test/node_modules/postcss-loader/src/index.js","mtime":1655612265268},{"path":"/Users/pengsmart/Documents/code/frontEnd/vue/vue_test/node_modules/cache-loader/dist/cjs.js","mtime":1655612206473},{"path":"/Users/pengsmart/Documents/code/frontEnd/vue/vue_test/node_modules/vue-loader/lib/index.js","mtime":1655612261790}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLypoZWFkZXIqLwoudG9kby1oZWFkZXIgaW5wdXQgewogIHdpZHRoOiA1NjBweDsKICBoZWlnaHQ6IDI4cHg7CiAgZm9udC1zaXplOiAxNHB4OwogIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7CiAgYm9yZGVyLXJhZGl1czogNHB4OwogIHBhZGRpbmc6IDRweCA3cHg7Cn0KCi50b2RvLWhlYWRlciBpbnB1dDpmb2N1cyB7CiAgb3V0bGluZTogbm9uZTsKICBib3JkZXItY29sb3I6IHJnYmEoODIsIDE2OCwgMjM2LCAwLjgpOwogIGJveC1zaGFkb3c6IGluc2V0IDAgMXB4IDFweCByZ2JhKDAsIDAsIDAsIDAuMDc1KSwgMCAwIDhweCByZ2JhKDgyLCAxNjgsIDIzNiwgMC42KTsKfQo="},{"version":3,"sources":["MyHeader.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"MyHeader.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"todo-header\">\n        <!-- @keyup.enter 鼠标回车 -->\n        <input type=\"text\" placeholder=\"请输入你的任务名称，按回车键确认\" v-model=\"title\"  @keyup.enter=\"add\"/>\n    </div>\n</template>\n\n<script>\nimport {nanoid} from 'nanoid'\nexport default {\n    name:'MyHeader',\n    data() {\n        return {\n            title:''\n        }\n    },\n    methods: {\n        add(e) {\n            if(!this.title.trim()) return alert('输入不能为空')\n            const todoObj = {id:nanoid(),title:this.title,done:false}\n            //这里的this还是header，只不过header和app里的received方法引用地址相同，你在header里面调用了，也相当于在app中调用了\n            this.$emit('addTodo',todoObj);\n            this.title = ''\n    } \n}\n}\n// 怎么获取用户的输入，有两个办法, 1.method里面用event，通过event.target.value拿到 2.通过v-model进行双向数据绑定,data()里必须有v-model的值\n// 1. methods: {\n//     add(event) {\n//         console.log(event.target.value)\n//     } \n// 2. data() {\n//         return {\n//             title:''\n//         }\n//     },\n//     methods: {\n//     add() {\n//         console.log(this.title)\n//     } \n\n\n</script>\n\n<style scoped>\n/*header*/\n.todo-header input {\n  width: 560px;\n  height: 28px;\n  font-size: 14px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  padding: 4px 7px;\n}\n\n.todo-header input:focus {\n  outline: none;\n  border-color: rgba(82, 168, 236, 0.8);\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(82, 168, 236, 0.6);\n}\n</style>"]}]}